<?php
// $Id: icalfield_ajaxy.module,v 1.1.2.1 2010/09/21 22:25:11 crell Exp $

/**
 * @file
 *
 * @copyright (C) Copyright 2010 Palantir.net
 * @license http://www.gnu.org/licenses/gpl-2.0.html
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Defines an iCal Field Ajaxy Widget
 */

// Most of the code for the widget lies in include files.
require_once 'includes/icalfield_ajaxy.inc';

/**
 * Implementation of hook_theme().
 */
function icalfield_ajaxy_theme() {
  return array(
    'ical_ajaxy' => array(
      'arguments' => array('element' => NULL),
    ),
    'icalfield_ajaxy_multiple_form_editor_dates' => array(
      'arguments' => array('element' => array(), 'data' => array()),
    ),
    'icalfield_ajaxy_multiple_form_editor_rrule' => array(
      'arguments' => array('element' => array(), 'data' => array()),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function icalfield_ajaxy_menu() {
  $items['icalfield/ajaxy/single/%/%/%'] = array(
    'page callback' => 'icalfield_ajaxy_single_dispatch',
    'page arguments' => array(3, 4, 5),
    // We are setting this to access content since this callbacks take in
    // information, manipulate it, and send something back. They are, for the
    // most part, black boxes that do not interact with other parts of Drupal.
    'access arguments' => array('access content'),
  );
  $items['icalfield/ajaxy/rule/%/%/%'] = array(
    'page callback' => 'icalfield_ajaxy_rule_dispatch',
    'page arguments' => array(3, 4, 5),
    'access arguments' => array('access content'),
  );
  $items['icalfield/ajaxy/rule/%/%/%/%'] = array(
    'page callback' => 'icalfield_ajaxy_rule_dispatch',
    'page arguments' => array(3, 4, 5, 6),
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
* Implementation of hook_widget_info().
*/
function icalfield_ajaxy_widget_info() {
  return array(
    'ical_ajaxy' => array(
      'label' => 'Fancy ajaxy calendar',
      'field types' => array('ical'),
      'multiple values' => CONTENT_HANDLE_MODULE,
      'callbacks' => array(
        'default value' => CONTENT_CALLBACK_DEFAULT,
      ),
    ),
  );
}

/**
 * Implementation of hook_widget().
 */
function icalfield_ajaxy_widget(&$form, &$form_state, $field, $items, $delta = 0) {
  switch ($field['widget']['type']) {
    case 'ical_ajaxy':
      $element = array(
        '#type' => 'ical_ajaxy',
        // Because this is a multi-value widget.
        '#default_value' => $items,
      );
      break;
  }

  return $element;
}

/**
 * Implementation of CCK's hook_widget_settings().
 */
function icalfield_ajaxy_widget_settings($op, $widget) {
  switch ($op) {
    case 'form':
      $form = array();
      $form['default_time'] = array(
        '#type' => 'textfield',
        '#title' => t('Default Time'),
        '#default_value' => ($widget['default_time']) ? $widget['default_time'] : t('8:00 am'),
        '#description' => t('Default time when using the timepicker widget.'),
      );
      return $form;
    case 'validate':
      break;
    case 'save':
      return array('default_time');
  }
}

/**
 * Implementation of FAPI hook_elements().
 */
function icalfield_ajaxy_elements() {
  return array(
    'ical_ajaxy' => array(
      '#input' => TRUE,
      '#columns' => array(
        'name',
        'value',
        'ical_id',
      ),
      '#process' => array('icalfield_ajaxy_process'),
      '#element_validate' => array('icalfield_ajaxy_validate'),
    ),
  );
}

/**
 * Implementation of hook_autoload_info().
 */
function icalfield_ajaxy_autoload_info() {
  return array(
    'ICalFieldAjaxyLookup' => array(
      'file' => 'includes/icalfield_ajaxy.lookup.inc',
    ),
  );
}

/**
 * The theme function for ical_ajaxy.
 *
 * This is very very very similar to theme_fieldset. The only difference
 * is this does not render what is stored in #value.
 */
function theme_ical_ajaxy($element) {
  if (!empty($element['#collapsible'])) {
    drupal_add_js('misc/collapse.js');

    if (!isset($element['#attributes']['class'])) {
      $element['#attributes']['class'] = '';
    }

    $element['#attributes']['class'] .= ' collapsible';
    if (!empty($element['#collapsed'])) {
      $element['#attributes']['class'] .= ' collapsed';
    }
  }

  return '<fieldset'. drupal_attributes($element['#attributes']) .'>'. ($element['#title'] ? '<legend>'. $element['#title'] .'</legend>' : '') . (isset($element['#description']) && $element['#description'] ? '<div class="description">'. $element['#description'] .'</div>' : '') . (!empty($element['#children']) ? $element['#children'] : '') ."</fieldset>\n";
}