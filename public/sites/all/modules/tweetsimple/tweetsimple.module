<?php 
// $Id: tweetsimple.module,v 1.2 2009/08/17 20:17:57 rfpldev Exp $

/** 
 * @file tweetsimple.module
 *
 * Retrieve Twitter-type feeds 
 */

/**
 * Implementation of hook_block().
 */
function tweetsimple_block($op = 'list', $delta = 0, $edit = array()) { 
  $def_uri = 'http://search.twitter.com/search.atom?q=cool+filter%3Alinks&rpp=10';
  switch ($op) { 
    case 'list': 
      $blocks[0]['info'] = t('Twitter Feed (TweetSimple)'); 
      $blocks[0]['cache'] = BLOCK_NO_CACHE;
      
      return $blocks; 
    case 'configure': 
      $form = array(); 
      if ($delta == 0 && user_access('administer blocks')) {
        $form['tweetsimple_block_uri'] = array(
          '#type' => 'textfield', 
          '#title' => t('URI for Twitter Feed'), 
          '#default_value' => variable_get('tweetsimple_block_uri', $def_uri), 
        );
      } 
      return $form; 
    case 'save':
      variable_set('tweetsimple_block_uri', 
      (string) $edit['tweetsimple_block_uri']);
      break;
    case 'view':
      $block = array();
      if ($delta == 0) {
        // get tweetsimple_block_uri
        $tweet_uri = variable_get('tweetsimple_block_uri', $def_uri);
        
        if ($content = _tweetsimple_getblock($tweet_uri)) {
          drupal_add_css(drupal_get_path('module', 'tweetsimple') .'/css/tweetsimple.css');
          $block['subject'] = t('Twitter Feed');
          $block['content'] = $content;
        }
      }
    return $block;
  } 
} 


/**
 * Implementation of hook_theme().
 */
function tweetsimple_theme() {
  return array(
    'tweetsimple_tweets' => array(
      'arguments' => array('tweets' => array()),
    ),
    'tweetsimple_tweet' => array(
      'arguments' => array(
        'twicon' => NULL,
        'twauthor' => NULL,
        'twauthor_link' => NULL,   
        'twitem' => NULL,
        'twdate' => NULL,
        'twfrom' => NULL,
      ),
      'template' => 'tweetsimple-tweet'
    ),
  );
}

function theme_tweetsimple_tweets($tweets) {
  $output = '<div id="twblock">';
  foreach ($tweets as $tweet) {
    $output .= theme('tweetsimple_tweet', $tweet['twicon'], $tweet['twauthor'], $tweet['twauthor_link'], $tweet['twitem'], $tweet['twdate'], $tweet['twfrom']);
  }
  $output .= '</div>';
  return $output;
}

function _tweetsimple_getblock($tweet_uri) {
  // simplepie_get((string) tweeter search uri, (string) simplepie cache loc, (int) cache refresh in seconds)
  if ($simplepie = simplepie_get($tweet_uri, FALSE, 600)) {
    foreach ($simplepie->get_items() as $item) {
      if ($author = $item->get_author()) {
        $twauthor = check_plain($author->get_name());
        $twauthor_link = filter_xss($author->get_link());
      } 
      else {
        $twauthor = '';
      }
      
      $t_src = $item->get_item_tags('http://api.twitter.com/', 'source');
      $twfrom = filter_xss(trim($t_src[0]['data'], '"'));
      
      $tweets[] = array(
        'twicon' => filter_xss($item->get_link(0, $rel = 'image')),
        'twauthor' => $twauthor,
        'twauthor_link' => $twauthor_link,   
        'twitem' => filter_xss($item->get_description(), $allowed_tags = array('a', 'em', 'strong', 'cite', 'code', 'ul', 'b')),
        'twdate' => $item->get_date('j F Y | g:i a '),
        'twfrom' => $twfrom,
      );
    }
  } 
  else {
    drupal_set_message(t("Simplepie error."), 'error');
  }
  // echo '<pre>'; print_r($tweets); echo '</pre>';
  if (count($tweets)) {
 	 return theme('tweetsimple_tweets', $tweets);
  } else {
  	return '<p class="err" style="margin: 8px; padding: 12px;">Sorry, this feed is currently empty, check later or visit <a href="http://www.twitter.com">twitter.com</a> to post your own tweets!</p>';
  }
}










